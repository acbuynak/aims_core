<?xml version="1.0" encoding="utf-8"?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from mh5_with_pgn64.xacro           | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="bot_mh5">
  <!-- link list -->
  <link name="world"/>
  <!-- ADDED NEW: World Link. Required for robot to be rigidly attached to world.-->
  <link name="robot_base_link">
    <visual>
      <origin rpy="0 0 3.14159"/>
      <geometry>
        <mesh filename="package://motoman_mh5_support/meshes/mh5/visual/MH5_BASE_AXIS.stl"/>
      </geometry>
      <material name="blue">
        <color rgba="0 0 1 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 3.14159"/>
      <geometry>
        <mesh filename="package://motoman_mh5_support/meshes/mh5/collision/MH5_BASE_AXIS.stl"/>
      </geometry>
      <material name="yellow">
        <color rgba="0 1 1 1"/>
      </material>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0.1"/>
      <mass value="1"/>
      <inertia ixx="0.0077" ixy="0.0" ixz="0.0" iyy="0.0066" iyz="0.0" izz="0.0077"/>
    </inertial>
  </link>
  <link name="robot_link_s">
    <visual>
      <geometry>
        <mesh filename="package://motoman_mh5_support/meshes/mh5/visual/MH5_S_AXIS.stl"/>
      </geometry>
      <material name="silver">
        <color rgba="0.8 0.8 0.8 1"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <mesh filename="package://motoman_mh5_support/meshes/mh5/collision/MH5_S_AXIS.stl"/>
      </geometry>
      <material name="yellow"/>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0.05"/>
      <mass value="1"/>
      <inertia ixx="0.0052" ixy="0.0" ixz="0.0" iyy="0.0052" iyz="0.0" izz="0.0066"/>
    </inertial>
  </link>
  <link name="robot_link_l">
    <visual>
      <!-- <origin rpy="1.57 3.1416 0" xyz="0 0 0"/> -->
      <geometry>
        <mesh filename="package://motoman_mh5_support/meshes/mh5/visual/MH5_L_AXIS.stl"/>
      </geometry>
      <material name="blue"/>
    </visual>
    <collision>
      <!-- <origin rpy="1.57 3.1416 0" xyz="0 0 0"/> -->
      <geometry>
        <mesh filename="package://motoman_mh5_support/meshes/mh5/collision/MH5_L_AXIS.stl"/>
      </geometry>
      <material name="yellow"/>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0.13"/>
      <mass value="1"/>
      <inertia ixx="0.02055" ixy="0.0" ixz="0.0" iyy="0.01875" iyz="0.0" izz="0.00555"/>
    </inertial>
  </link>
  <link name="robot_link_u">
    <visual>
      <!-- <origin rpy="1.57 -3.1415 0" xyz="0 0 0"/> -->
      <geometry>
        <mesh filename="package://motoman_mh5_support/meshes/mh5/visual/MH5_U_AXIS.stl"/>
      </geometry>
      <material name="blue"/>
    </visual>
    <collision>
      <!-- <origin rpy="1.57 -3.1415 0" xyz="0 0 0"/> -->
      <geometry>
        <mesh filename="package://motoman_mh5_support/meshes/mh5/collision/MH5_U_AXIS.stl"/>
      </geometry>
      <material name="yellow"/>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0.05"/>
      <mass value="1"/>
      <inertia ixx="0.00328" ixy="0.0" ixz="0.0" iyy="0.00354" iyz="0.0" izz="0.00401"/>
    </inertial>
  </link>
  <link name="robot_link_r">
    <visual>
      <!-- <origin rpy="0 0 3.1416" xyz="0 0 0"/> -->
      <geometry>
        <mesh filename="package://motoman_mh5_support/meshes/mh5/visual/MH5_R_AXIS.stl"/>
      </geometry>
      <material name="silver"/>
    </visual>
    <collision>
      <!-- <origin rpy="0 0 3.1416" xyz="0 0 0"/> -->
      <geometry>
        <mesh filename="package://motoman_mh5_support/meshes/mh5/collision/MH5_R_AXIS.stl"/>
      </geometry>
      <material name="yellow"/>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0.1 0 0"/>
      <mass value="1"/>
      <inertia ixx="0.00184" ixy="0.0" ixz="0.0" iyy="0.00708" iyz="0.0" izz="0.00691"/>
    </inertial>
  </link>
  <link name="robot_link_b">
    <visual>
      <!-- <origin rpy="-1.57 0 3.1416" xyz="0 0 0"/> -->
      <geometry>
        <mesh filename="package://motoman_mh5_support/meshes/mh5/visual/MH5_B_AXIS.stl"/>
      </geometry>
      <material name="blue"/>
    </visual>
    <collision>
      <!-- <origin rpy="-1.57 0 3.1416" xyz="0 0 0"/> -->
      <geometry>
        <mesh filename="package://motoman_mh5_support/meshes/mh5/collision/MH5_B_AXIS.stl"/>
      </geometry>
      <material name="yellow"/>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0.05 0 0"/>
      <mass value="1"/>
      <inertia ixx="0.000708" ixy="0.0" ixz="0.0" iyy="0.001308" iyz="0.0" izz="0.004167"/>
    </inertial>
  </link>
  <link name="robot_link_t">
    <visual>
      <geometry>
        <mesh filename="package://motoman_mh5_support/meshes/mh5/visual/MH5_T_AXIS.stl"/>
      </geometry>
      <material name="silver"/>
    </visual>
    <collision>
      <geometry>
        <mesh filename="package://motoman_mh5_support/meshes/mh5/collision/MH5_T_AXIS.stl"/>
      </geometry>
      <material name="yellow"/>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="1"/>
      <inertia ixx="0.00041667" ixy="0.0" ixz="0.0" iyy="0.00028333" iyz="0.0" izz="0.00028333"/>
    </inertial>
  </link>
  <!-- end of link list -->
  <!-- joint list -->
  <joint name="fixed" type="fixed">
    <!-- ADDED BY ADAM:: Start -->
    <parent link="world"/>
    <child link="robot_base_link"/>
  </joint>
  <!-- ADDED BY ADAM:: END -->
  <joint name="robot_joint_s" type="revolute">
    <parent link="robot_base_link"/>
    <child link="robot_link_s"/>
    <origin rpy="0 0 0" xyz="0 0 0.1990"/>
    <axis xyz="0 0 1"/>
    <limit effort="100" lower="-2.9671" upper="2.9671" velocity="2.96"/>
  </joint>
  <joint name="robot_joint_l" type="revolute">
    <parent link="robot_link_s"/>
    <child link="robot_link_l"/>
    <origin rpy="0 0 0" xyz="0.0880 0 0.1310"/>
    <axis xyz="0 1 0"/>
    <limit effort="100" lower="-1.1345" upper="2.6180" velocity="2.96"/>
  </joint>
  <joint name="robot_joint_u" type="revolute">
    <parent link="robot_link_l"/>
    <child link="robot_link_u"/>
    <origin rpy="0 0 0" xyz="0 0 0.3100"/>
    <axis xyz="0 -1 0"/>
    <!-- Old limits: lower="-2.3736" upper="4.4506" The new limits
           below were measured from an MH5F.  They ensure that link_r
           won't hit link_l even when joint_r is at 45 degrees.  The
           old limits were converted directly from the MH5 data sheet,
           which was clearly way off.
				  .. Noted by ACBUYNAK February 2020 -->
    <limit effort="100" lower="-1.0122" upper="3.2218" velocity="2.96"/>
  </joint>
  <joint name="robot_joint_r" type="revolute">
    <parent link="robot_link_u"/>
    <child link="robot_link_r"/>
    <origin rpy="0 0 0" xyz="0.0715 0 0.0399"/>
    <axis xyz="-1 0 0"/>
    <limit effort="100" lower="-3.3161" upper="3.3161" velocity="3.48"/>
  </joint>
  <joint name="robot_joint_b" type="revolute">
    <parent link="robot_link_r"/>
    <child link="robot_link_b"/>
    <origin rpy="0 0 0" xyz="0.2335 0 0"/>
    <axis xyz="0 -1 0"/>
    <limit effort="100" lower="-2.1817" upper="2.1817" velocity="3.48"/>
  </joint>
  <joint name="robot_joint_t" type="revolute">
    <parent link="robot_link_b"/>
    <child link="robot_link_t"/>
    <origin rpy="0 0 0" xyz="0.0865 0 0"/>
    <axis xyz="-1 0 0"/>
    <limit effort="100" lower="-6.2831" upper="6.2831" velocity="6.97"/>
  </joint>
  <!-- end of joint list -->
  <!-- Tool0 = Tool Mounting Point -->
  <!-- If only link in tool, will include all geometry, inertia, etc data -->
  <link name="eef_tool0">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <!-- ACB 2020-04-13 Confirm length of t_link offset to current value -->
      <geometry>
        <mesh filename="package://schunk_pgn64_support/meshes/pgn64/visual/PGN64_SOLID.stl"/>
      </geometry>
      <material name="green">
        <color rgba="0 1 0 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0"/>
      <!-- ACB 2020-04-13 Confirm length of t_link offset to current value -->
      <geometry>
        <mesh filename="package://schunk_pgn64_support/meshes/pgn64/collision/PGN64_SOLID.stl"/>
      </geometry>
      <material name="green">
        <color rgba="0 1 0 1"/>
      </material>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="1"/>
      <inertia ixx="0.00041667" ixy="0.0" ixz="0.0" iyy="0.00028333" iyz="0.0" izz="0.00028333"/>
    </inertial>
  </link>
  <!-- Begin Tool Detail: JOINT & LINK list -->
  <!-- ADD ADDITIONAL JOINTS & LINKS HERE IF TOOL IS MORE COMPLEX -->
  <!-- Also, ADD transmission elements to pgn64.gazebo file for new joints/links -->
  <!-- End Tool Detail: JOINT & LINK list -->
  <!-- TCP FRAME (Tool Center Point) -->
  <joint name="eef_tcp_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.134112 0 0"/>
    <parent link="eef_tool0"/>
    <child link="eef_tcp"/>
  </joint>
  <link name="eef_tcp"/>
  <!-- Attach eef to MH5 model -->
  <!-- Note: this assumes that the 'schunk_pgn64' macro defines a 'tool0'
         link which is the start of it's kinematic chain (if any) -->
  <joint name="robot_flange-eef_tool0" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="robot_link_t"/>
    <child link="eef_tool0"/>
  </joint>
  <!-- ALTERNATIVE METHOD OF PASSING 'prefix' VARIABLE -->
  <!-- <xacro:macro name="myrobot_gazebo" params="prefix"> -->
  <!-- GAZEBO COLORING -->
  <gazebo reference="base_link">
    <material>Gazebo/White</material>
  </gazebo>
  <gazebo reference="link_s">
    <material>Gazebo/White</material>
  </gazebo>
  <gazebo reference="link_l">
    <material>Gazebo/White</material>
  </gazebo>
  <gazebo reference="link_u">
    <material>Gazebo/White</material>
  </gazebo>
  <gazebo reference="link_r">
    <material>Gazebo/White</material>
  </gazebo>
  <gazebo reference="link_b">
    <material>Gazebo/White</material>
  </gazebo>
  <gazebo reference="link_t">
    <material>Gazebo/Orange</material>
  </gazebo>
  <!-- transmission elements are required by the controller manager (here: for simulation in gazebo)
  Used to Link actuators to joints  -->
  <!-- Reference https://wiki.ros.org/urdf/XML/Transmission -->
  <!-- EfforJointInterface is the correct type of interface for Gazebo Simulation per following ROSwiki -->
  <!-- https://answers.ros.org/question/285977/could-not-find-resource-in-hardware_interfaceeffortjointinterface/ -->
  <transmission name="joint_s_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="joint_s">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <!-- hardware_interface/EffortJointInterface -->
    </joint>
    <actuator name="joint_s_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="joint_l_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="joint_l">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <!-- hardware_interface/EffortJointInterface -->
    </joint>
    <actuator name="joint_l_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="joint_u_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="joint_u">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <!-- hardware_interface/EffortJointInterface -->
    </joint>
    <actuator name="joint_u_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="joint_r_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="joint_r">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <!-- hardware_interface/EffortJointInterface -->
    </joint>
    <actuator name="joint_r_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="joint_b_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="joint_b">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <!-- hardware_interface/EffortJointInterface -->
    </joint>
    <actuator name="joint_b_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="joint_t_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="joint_t">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <!-- hardware_interface/EffortJointInterface -->
    </joint>
    <actuator name="joint_t_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- xacro:transmission_block joint_name="${prefix}joint_t" /-->
  <!-- Gazebo plugin for ROS Control ......................................... -->
  <gazebo>
    <plugin filename="libgazebo_ros_control.so" name="gazebo_ros_control">
      <robotNamespace>bot_mh5</robotNamespace>
    </plugin>
  </gazebo>
  <!-- ALTERNATIVE METHOD OF PASSING 'prefix' VARIABLE -->
  <!-- <xacro:macro name="myrobot_gazebo" params="prefix"> -->
  <!-- GAZEBO COLORING -->
  <gazebo reference="tool0">
    <material>Gazebo/Gray</material>
  </gazebo>
  <!-- transmission elements are required by the controller manager (here: for simulation in gazebo)
  Used to Link actuators to joints  -->
  <!-- Reference https://wiki.ros.org/urdf/XML/Transmission -->
  <!-- GENERATE JOINT TRANSMISSION ELEMENTS -->
  <!-- xacro:transmission_block joint_name="${prefix}joint_t" /-->
</robot>
